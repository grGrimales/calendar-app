{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","components/auth/RegisterScreen.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/stores.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startRegister","email","password","dispatch","a","resp","json","ok","setItem","Date","getTime","login","uid","Swal","fire","msg","checkingFinish","user","startLogout","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","className","onSubmit","preventDefault","placeholder","onChange","to","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setdateStart","dateEnd","setdateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","PublicRoute","RegisterScreen","handleRegisterInputChange","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8a01985.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === \"GET\") {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nconst fetchConToken = (endpoint, data, method = \"GET\") => {\n  const url = `${baseUrl}/${endpoint}`;\n  const token = localStorage.getItem(\"token\") || \"\";\n\n  if (method === \"GET\") {\n    return fetch(url, {\n      method,\n      headers: {\n        \"x-token\": token,\n      },\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-token\": token,\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport { fetchSinToken, fetchConToken };\n","export const types = {\n  uiOpenModal: \"[ui] Open modal\",\n  uiCloseModal: \"[ui] Close modal\",\n\n  eventSetActive: \"[event] Set Active\",\n  eventLogout: \"[event] Logout event\",\n\n  eventStartAddNew: \"[event] Start add new\",\n  eventAddNew: \"[event] Add new\",\n  eventClearActiveEvent: \"[event] Clear active event\",\n  eventUpdated: \"[event] Event updated\",\n  eventDeleted: \"[event] Event deleted\",\n  eventLoaded: \"[event] Events loaded\",\n\n  authChekingFinish: \"[auth] Finish cheking login state\",\n  authStartLogin: \"[auth] Start login\",\n  authLogin: \"[auth] Login,\",\n  authStartRegister: \"[auth] Start Register\",\n  authStartTokenRenew: \"[auth] Start token renew\",\n  authLogout: \"[auth] Logout\",\n};\n","import moment from \"moment\";\n\nexport const prepareEvents = (events = []) => {\n  return events.map((e) => ({\n    ...e,\n    end: moment(e.end).toDate(),\n    start: moment(e.start).toDate(),\n  }));\n};\n","import { types } from \"../types/types\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport Swal from \"sweetalert2\";\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n\n    try {\n      const resp = await fetchConToken(\"events\", event, \"POST\");\n      const body = await resp.json();\n      console.log(body);\n\n      if (body.ok) {\n        event.id = body.events.id;\n        event.user = {\n          _id: uid,\n          name: name,\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {}\n  };\n};\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent,\n});\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\");\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event,\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const { id } = getState().calendar.activeEvent;\n    try {\n      const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\");\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire(\"Error\", body.msg, \"error\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken(\"events\");\n      const body = await resp.json();\n\n      const events = prepareEvents(body.events);\n\n      dispatch(eventLoaded(events));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\nexport const eventLogout = () => ({\n  type: types.eventLogout,\n});\n","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n    }\n  };\n};\n\nexport const startRegister = (email, password, name) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\n      \"auth/new\",\n      { email, password, name },\n      \"POST\"\n    );\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire(\"Error\", body.msg, \"error\");\n    }\n  };\n};\n\nexport const startCheking = () => {\n  return async (dispatch) => {\n    const resp = await fetchConToken(\"auth/renew\");\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem(\"token\", body.token);\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nconst checkingFinish = () => ({\n  type: types.authChekingFinish,\n});\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(logout());\n    dispatch(eventLogout());\n  };\n};\n\nconst logout = () => ({ type: types.authLogout });\n","import React from \"react\";\nimport \"./login.css\";\nimport { Link } from \"react-router-dom\";\n\nimport { useForm } from \"../../hooks/useForm\";\nimport { useDispatch } from \"react-redux\";\nimport { startLogin, startRegister } from \"../../actions/auth\";\nimport Swal from \"sweetalert2\";\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    lEmail: \"\",\n    lPassword: \"\",\n  });\n\n  const { lEmail, lPassword } = formLoginValues;\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: \"Test\",\n    rEmail: \"test@gmail.com\",\n    rPassword1: \"123456\",\n    rPassword2: \"123456\",\n  });\n\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLogin(lEmail, lPassword));\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (rPassword1 !== rPassword2) {\n      return Swal.fire(\"Error\", \"Las contraseñas deben ser iguales\", \"error\");\n    }\n    dispatch(startRegister(rEmail, rPassword1, rName));\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <Link className=\"link-login\" to=\"/register\" >\n         ¿No tienes cuenta, Ingresa aquí?\n        </Link>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n\n       \n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\n\nexport const Navbar = () => {\n  const dispatch = useDispatch();\n\n  const { name } = useSelector((state) => state.auth);\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\"> {name} </span>\n\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Salir</span>\n      </button>\n    </div>\n  );\n};\n","export const messages = {\n  allDay: \"Todo el día\",\n  previous: \"<\",\n  next: \">\",\n  today: \"Hoy\",\n  month: \"Mes\",\n  week: \"Semana\",\n  day: \"Día\",\n  agenda: \"Agenda\",\n  date: \"Fecha\",\n  time: \"Hora\",\n  event: \"Evento\",\n  noEventsInRange: \"No hay eventos en este rango\",\n  showMore: (total) => `+ Ver más (${total})`,\n};\n","import userEvent from \"@testing-library/user-event\";\nimport React from \"react\";\n\nexport const CalendarEvent = ({ event }) => {\n  const { title, user } = event;\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span>{user.name}</span>\n    </div>\n  );\n};\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n});\n","import React, { cloneElement, useState, useEffect } from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport Modal from \"react-modal\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch } from \"react-redux\";\nimport { uiCloseModal, uiOpenModal } from \"../../actions/ui\";\nimport {\n  eventClearActiveEvent,\n  eventStartAddNew,\n  eventStartUpdate,\n} from \"../../actions/events\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nModal.setAppElement(\"#root\");\n\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\nconst nowPlus1 = now.clone().add(1, \"hours\");\n\nconst initEvent = {\n  title: \"\",\n  notes: \"\",\n  start: now.toDate(),\n  end: nowPlus1.toDate(),\n};\n\nexport const CalendarModal = () => {\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { activeEvent } = useSelector((state) => state.calendar);\n\n  const dispatch = useDispatch();\n\n  const [dateStart, setdateStart] = useState(now.toDate());\n  const [dateEnd, setdateEnd] = useState(nowPlus1.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n\n  const [formValues, setFormValues] = useState(initEvent);\n  const { notes, title, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActiveEvent());\n    setFormValues(initEvent);\n  };\n\n  const handleStartDateChange = (e) => {\n    setdateStart(e);\n    setFormValues({\n      ...formValues,\n      start: e,\n    });\n  };\n\n  const handleEndDateChange = (e) => {\n    setdateEnd(e);\n    setFormValues({\n      ...formValues,\n      end: e,\n    });\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire(\n        \"Error\",\n        \"La fecha fin debe ser mayor a la fecha inicio\",\n        \"error\"\n      );\n    }\n\n    if (title.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    if (activeEvent) {\n      dispatch(eventStartUpdate(formValues));\n    } else {\n      dispatch(eventStartAddNew(formValues));\n    }\n\n    setTitleValid(true);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n      <h1> {activeEvent ? \"Editar evento\" : \"Nuevo evento\"} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={dateStart}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={dateEnd}\n            minDate={dateStart}\n            className=\"form-control\"\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={`form-control  ${!titleValid && \"is-invalid\"}`}\n            placeholder=\"Título del evento\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Información adicional\n          </small>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiOpenModal } from \"../../actions/ui\";\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch();\n\n  const handleClickNew = () => {\n    dispatch(uiOpenModal());\n  };\n\n  return (\n     <button onClick={handleClickNew} className=\"btn btn-primary fab\">\n      <i className=\"fas fa-plus\"></i>\n    </button>\n   \n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { eventStartDelete } from \"../../actions/events\";\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(eventStartDelete());\n  };\n\n  return (\n    <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n      <i className=\"fas fa-trash\"></i>\n      <span> Borrar evento</span>\n    </button>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"moment/locale/es\";\n\nimport { Navbar } from \"../ui/Navbar\";\nimport { messages } from \"../../helpers/calendar-messages-es\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\nimport { uiOpenModal } from \"../../actions/ui\";\nimport {\n  eventClearActiveEvent,\n  eventSetActive,\n  eventStartLoading,\n} from \"../../actions/events\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\n\nmoment.locale(\"es\");\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector((state) => state.calendar);\n  const { uid } = useSelector((state) => state.auth);\n\n  const [lastView, setlastView] = useState(\n    localStorage.getItem(\"lastView\") || \"month\"\n  );\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n  const onDoubleClick = (e) => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = (e) => {\n    setlastView(e);\n    localStorage.setItem(\"lastView\", e);\n  };\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActiveEvent());\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: uid === event.user._id ? \"#367CF7\" : \"#465660\",\n      borderRadius: \"0px\",\n      opacity: 0.8,\n      display: \"block\",\n      color: \"white\",\n    };\n    return {\n      style,\n    };\n  };\n\n  return (\n    <>\n    <div className=\"calendar-screen\">\n      <Navbar />\n\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500 }}\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        view={lastView}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n\n      {activeEvent && <DeleteEventFab />}\n\n      <AddNewFab />\n      <CalendarModal />\n    </div>\n      </>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./login.css\";\nimport { Link } from \"react-router-dom\";\n\nimport { useForm } from \"../../hooks/useForm\";\nimport { useDispatch } from \"react-redux\";\nimport { startLogin, startRegister } from \"../../actions/auth\";\nimport Swal from \"sweetalert2\";\n\nexport const RegisterScreen = () => {\n  const dispatch = useDispatch();\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: \"Lucia\",\n    rEmail: \"lucia@gmail.com\",\n    rPassword1: \"123456\",\n    rPassword2: \"123456\",\n  });\n\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (rPassword1 !== rPassword2) {\n      return Swal.fire(\"Error\", \"Las contraseñas deben ser iguales\", \"error\");\n    }\n    dispatch(startRegister(rEmail, rPassword1, rName));\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword1\"\n                value={rPassword1}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                name=\"rPassword2\"\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <Link to=\"/login\" className=\"link-register\">\n          ¿Ya tienes cuenta Ingresa Aquí?\n        </Link>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { HashRouter  as Router, Switch, Redirect } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { startCheking } from \"../actions/auth\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(startCheking());\n  }, [dispatch]);\n\n  \n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={LoginScreen}\n            isAuthenticated={!!uid}\n          />\n           <PublicRoute\n            exact\n            path=\"/register\"\n            component={RegisterScreen}\n            isAuthenticated={!!uid}\n          />\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={CalendarScreen}\n            isAuthenticated={!!uid}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  checking: true,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n\n    case types.authChekingFinish:\n      return {\n        ...state,\n        checking: false,\n      };\n\n    case types.authLogout:\n      return {\n        checking: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map((e) =>\n          e.id === action.payload.id ? action.payload : e\n        ),\n      };\n\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\n        activeEvent: null,\n      };\n\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n\n    case types.eventLogout:\n      return {\n        ...initialState,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiRecuder = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\n\nimport { uiRecuder } from \"./uiReducer\";\n\nexport const rootReducer = combineReducers({\n  ui: uiRecuder,\n  calendar: calendarReducer,\n  auth: authReducer,\n});\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { AppRouter } from \"./router/AppRouter\";\nimport { store } from \"./store/stores\";\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\nimport \"./styles.css\";\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}